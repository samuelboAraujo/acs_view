import pandas as pd
import matplotlib.pyplot as plt 


def plots(file_path, file_name):
    df = pd.read_csv(file_path, sep=';')  
    raw_time = list(df['Time Since Hardware Start-Up'])
    graph_folder = r'C:\Users\samuc\Desktop\graficos' 
    time = []
    log_name = file_name.split('.')[0]

    for i in range(len(raw_time)):
        time.append(raw_time[i]-raw_time[0])

    p_est = df['p (Angular Velocity - X Body Axis)']
    p_setpoint = df['Desired p (Angular Velocity - X Body Axis)']

    phi_est = df['Roll']
    phi_setpoint = df['Desired Roll']

    q_est = df['q (Angular Velocity - Y Body Axis)']
    q_setpoint = df['Desired q (Angular Velocity - Y Body Axis)']

    theta_est = df['Pitch']
    theta_setpoint = df['Desired Pitch']

    heading_est = df['Heading']
    heading_setpoint = df['Desired Heading']

    psi_est = df['Yaw']

    r_est = df['Yaw rate']

    pwm1 = df['PWM 1']
    pwm2 = df['PWM 2']
    pwm3 = df['PWM 3']
    pwm4 = df['PWM 4']
    pwm5 = df['PWM 5']
    pwm6 = df['PWM 6']
    pwm7 = df['PWM 7']
    pwm8 = df['PWM 8']

    rpm1 = df['RPM_01']
    rpm2 = df['RPM_02']
    rpm3 = df['RPM_03']
    rpm4 = df['RPM_04']
    rpm5 = df['RPM_05']
    rpm6 = df['RPM_06']
    rpm7 = df['RPM_07']
    rpm8 = df['RPM_08']

    tensao1 = df['B_01']
    tensao2 = df['B_02']
    tensao3 = df['B_03']
    tensao4 = df['B_04']
    tensao5 = df['B_05']
    tensao6 = df['B_06']
    tensao7 = df['B_07']
    tensao8 = df['B_08']

    corrente1 = df['C_01']
    corrente2 = df['C_02']
    corrente3 = df['C_03']
    corrente4 = df['C_04']
    corrente5 = df['C_05']
    corrente6 = df['C_06']
    corrente7 = df['C_07']
    corrente8 = df['C_08']

    df['P_01'] = df['B_01']*df['C_01']
    df['P_02'] = df['B_02']*df['C_02']
    df['P_03'] = df['B_03']*df['C_03']
    df['P_04'] = df['B_04']*df['C_04']
    df['P_05'] = df['B_05']*df['C_05']
    df['P_06'] = df['B_06']*df['C_06']
    df['P_07'] = df['B_07']*df['C_07']
    df['P_08'] = df['B_08']*df['C_08']

    pot1 = df['P_01']
    pot2 = df['P_02']
    pot3 = df['P_03']
    pot4 = df['P_04']
    pot5 = df['P_05']
    pot6 = df['P_06']
    pot7 = df['P_07']
    pot8 = df['P_08']

    fig1, ax1 = plt.subplots(2, sharex = True)

    ax1[0].plot(time, p_est, label = 'roll rate')
    ax1[0].plot(time, p_setpoint, label = 'desired roll rate')
    ax1[0].legend()
    ax1[0].set_ylabel('rad/s')
    ax1[0].set_title('Roll rate')
    ax1[0].set_xlim(time[0],time[-1])

    ax1[1].plot(time, phi_est, label = 'roll')
    ax1[1].plot(time, phi_setpoint, label = 'desired roll')
    ax1[1].legend()
    ax1[1].set_title('Roll angle')
    ax1[1].set_ylabel('rad')
    ax1[1].set_xlim(time[0],time[-1])

    fig1.savefig(graph_folder + '\\' + 'Roll - ' + log_name)    
    
    plt.xlabel('t (s)')
        
    fig2, ax2 = plt.subplots(2, sharex = True)

    ax2[0].plot(time, q_est, label = 'pitch rate')
    ax2[0].plot(time, q_setpoint, label = 'desired pitch rate')
    ax2[0].legend()
    ax2[0].set_ylabel('rad/s')
    ax2[0].set_title('Pitch rate')
    ax2[0].set_xlim(time[0],time[-1])

    ax2[1].plot(time, theta_est, label = 'pitch')
    ax2[1].plot(time, theta_setpoint, label = 'desired pitch')
    ax2[1].legend()
    ax2[1].set_title('Pitch angle')
    ax2[1].set_ylabel('rad')
    ax2[1].set_xlim(time[0],time[-1])
    
    fig2.savefig(graph_folder + '\\' + 'Pitch - ' + log_name)
    
    plt.xlabel('t (s)')

    fig3, ax3 = plt.subplots(3, sharex = True)

    ax3[0].plot(time, r_est)
    ax3[0].set_ylabel('rad/s')
    ax3[0].set_title('Yaw rate')
    ax3[0].set_xlim(time[0],time[-1])

    ax3[1].plot(time, psi_est)
    ax3[1].set_title('Yaw angle')
    ax3[1].set_ylabel('rad')
    ax3[1].set_xlim(time[0],time[-1])
    
    ax3[2].plot(time, heading_est, label = 'heading')
    ax3[2].plot(time, heading_setpoint, label = 'desired heading')
    ax3[2].legend()
    ax3[2].set_ylabel('rad')
    ax3[2].set_title('Heading')
    ax3[2].set_xlim(time[0],time[-1])

    fig3.savefig(graph_folder + '\\' + 'Yaw - ' + log_name)
    
    plt.xlabel('t (s)')
    
    fig4, ax4 = plt.subplots(2, sharex = True)

    ax4[0].plot(time, pwm1, label = 'M1')
    ax4[0].plot(time, pwm2, label = 'M2')
    ax4[0].plot(time, pwm3, label = 'M3')
    ax4[0].plot(time, pwm4, label = 'M4')
    ax4[0].plot(time, pwm5, label = 'M5')
    ax4[0].plot(time, pwm6, label = 'M6')
    ax4[0].plot(time, pwm7, label = 'M7')
    ax4[0].plot(time, pwm8, label = 'M8')
    ax4[0].set_title('PWM')
    ax4[0].set_xlim(time[0],time[-1])
    ax4[0].set_ylabel('micro segundos')
    ax4[0].legend()

    ax4[1].plot(time, rpm1, label = 'M1')
    ax4[1].plot(time, rpm2, label = 'M2')
    ax4[1].plot(time, rpm3, label = 'M3')
    ax4[1].plot(time, rpm4, label = 'M4')
    ax4[1].plot(time, rpm5, label = 'M5')
    ax4[1].plot(time, rpm6, label = 'M6')
    ax4[1].plot(time, rpm7, label = 'M7')
    ax4[1].plot(time, rpm8, label = 'M8')
    ax4[1].set_title('RPM')
    ax4[1].set_ylabel('r.p.m.')
    ax4[1].legend()
    ax4[1].set_xlim(time[0],time[-1])

    fig4.savefig(graph_folder + '\\' + 'PWM_&_RPM - ' + log_name)
    
    plt.tight_layout()
    plt.xlabel('t (s)')
    #plt.close(fig4)
    
    fig5, ax5 = plt.subplots(2, sharex = True)

    ax5[0].plot(time, tensao1, label = 'M1')
    ax5[0].plot(time, tensao2, label = 'M2')
    ax5[0].plot(time, tensao3, label = 'M3')
    ax5[0].plot(time, tensao4, label = 'M4')
    ax5[0].plot(time, tensao5, label = 'M5')
    ax5[0].plot(time, tensao6, label = 'M6')
    ax5[0].plot(time, tensao7, label = 'M7')
    ax5[0].plot(time, tensao8, label = 'M8')
    ax5[0].set_xlim(time[0],time[-1])
    ax5[0].set_title('Tensão')
    ax5[0].set_ylabel('volts')
    ax5[0].legend()

    ax5[1].plot(time, corrente1, label = 'M1')
    ax5[1].plot(time, corrente2, label = 'M2')
    ax5[1].plot(time, corrente3, label = 'M3')
    ax5[1].plot(time, corrente4, label = 'M4')
    ax5[1].plot(time, corrente5, label = 'M5')
    ax5[1].plot(time, corrente6, label = 'M6')
    ax5[1].plot(time, corrente7, label = 'M7')
    ax5[1].plot(time, corrente8, label = 'M8')
    ax5[1].set_xlim(time[0],time[-1])
    ax5[1].set_title('Corrente')
    ax5[1].set_ylabel('ampere')
    ax5[1].legend()
    
    fig5.savefig(graph_folder + '\\' + 'Corrente_&_tensao - ' + log_name)
    
    plt.tight_layout()
    plt.xlabel('t (s)')
    #plt.close(fig5)
    
    fig6, ax6 = plt.subplots(1, sharex = True)

    ax6.plot(time, pot1, label = 'M1')
    ax6.plot(time, pot2, label = 'M2')
    ax6.plot(time, pot3, label = 'M3')
    ax6.plot(time, pot4, label = 'M4')
    ax6.plot(time, pot5, label = 'M5')
    ax6.plot(time, pot6, label = 'M6')
    ax6.plot(time, pot7, label = 'M7')
    ax6.plot(time, pot8, label = 'M8')
    ax6.set_title('Potência')
    ax6.set_ylabel('Watt')
    ax6.set_xlim(time[0],time[-1])
    ax6.legend()
    
    fig6.savefig(graph_folder + '\\' + 'Potencia - ' + log_name)

    plt.tight_layout()
    plt.xlabel('t (s)')
    #plt.close(fig6)
